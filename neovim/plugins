#!/bin/bash

nvim_packages=~/.config/nvim/bundle       # Neovim packages are installed here.
packages=~/dev_config/neovim/packages.txt # List of Neovim packages to install.
package_list=()                           # Array of the packages that are supposed to be installed.


# Delete any packages that are not in ./neovim/packages.txt
clean_packages () {
  # For each package that's currently installed
  for package in $(ls "$nvim_packages"); do
    # Check if it's supposed to be installed
    if [[ ! "${package_list[@]}" =~ "$package" ]]; then
      # If it's not in the list delete it
      printf "Deleting package %s\n" "$package"
      rm -rf "$nvim_packages"/"$package"
      printf "\n"
    fi
  done
}

# Load the list of packages into an array
get_package_list () {
  while IFS= read -r package; do
    package_list+=("$package")
  done < "$packages"
}

# Install/update packages from $package_list
load_packages () {
  for package in "${package_list[@]}"; do
    package_full_name=$( echo "$package" | awk '{split($0, a, "--"); gsub(/^[ \t]+/, "", a[1]); gsub(/[ \t]+$/, "", a[1]); print a[1]}' )
    package_name=$( echo "$package_full_name" | cut -d'/' -f2 )
    package_script=$( echo "$package" | awk '{split($0, a, "--"); gsub(/^[ \t]+/, "", a[2]); gsub(/[ \t]+$/, "", a[2]); print a[2]}' )

    # If the package isn't installed
    if [[ ! -d "$nvim_packages"/"$package_name" ]]; then
      # Install it
      printf "Loading package %s\n" "$package_name"
      git clone git://github.com/"$package_full_name" "$nvim_packages"/"$package_name"
      printf "\n"
    else
      # Otherwise make sure it's up to date
      printf "Updating package %s\n" $package_name
      cd "$nvim_packages"/"$package_name"
      git pull
      printf "\n"
    fi

    # If there's a post-install script
    if [[ ! -z "$package_script" ]]; then
      # Execute it
      printf "Executing post-install script:\n"
      eval "$package_script"
      printf "\n"
    fi
  done
}


# Make sure that Git is available
command -v git >/dev/null 2>&1
if [[ ! $? -eq 0 ]]; then
  printf "Git must be installed to run this script. Aborting.\n"
  exit 1
fi


printf "Loading Neovim plugins:\n\n"
get_package_list
load_packages
clean_packages
printf "Finished loading Neovim plugins.\n\n"
